(function(window,undefined){var namespace=window,currentObject=window,currentClass=null,inheriting=false,containsSuper=/xyz/.test(function(){xyz;})?/\b_super\b/:/.*/;namespace.classify=function(superclassOrName,definitionOrName,definition){var superclass,object,name;if(definition==undefined){name=superclassOrName;definition=definitionOrName;}
else{superclass=superclassOrName;name=definitionOrName;}
if(!currentObject[name]||typeof currentObject[name]!=="function"){currentObject[name]=buildClass(superclass);}
withCurrentClass(currentObject[name],function(){withCurrentObject(currentClass.prototype,function(){definition.call(currentClass);});});};namespace.def=function(objectOrName,definitionOrName,definition){var object,name;if(definition==undefined){object=currentObject;name=objectOrName;definition=definitionOrName;}
else{object=objectOrName;name=definitionOrName;}
definition=addSuperMethod(name,definition);object[name]=definition;};namespace.module=function(name,definition){if(!currentObject[name]){currentObject[name]={};}
withCurrentObject(currentObject[name],function(){definition.call(currentObject);});};namespace.include=function(moduleOrName,module){var object,name;if(module){name=moduleOrName;object=currentObject[name];if(object.prototype){object=object.prototype;}}
else{module=moduleOrName;object=(currentClass)?currentClass.prototype:currentObject;}
addModule(object,module);};namespace.extend=function(nameOrModule,module){var object,name;if(module){name=nameOrModule;object=currentObject[name];}
else if(currentClass){module=nameOrModule;object=currentClass;}
addModule(object,module);};namespace.alias=function(aliasName,name){currentObject[aliasName]=currentObject[name];};var withCurrentObject=function(newObject,block){var oldObject=currentObject;currentObject=newObject;block.call();currentObject=oldObject;},withCurrentClass=function(newClass,block){currentClass=newClass;block.call();currentClass=null;},buildClass=function(superclass){var newClass=function(){if(!inheriting&&this.initialize){this.initialize.apply(this,arguments);}}
if(superclass){inheriting=true;newClass.prototype=new superclass();inheriting=false;}
newClass.superclass=superclass;newClass.constructor=newClass;return newClass;},addModule=function(object,module){if(!object||!module){return;}
for(var name in module){object[name]=module[name];}},addSuperMethod=function(name,definition){var superclass=currentClass&&currentClass.superclass&&currentClass.superclass.prototype;if(superclass&&typeof definition==="function"&&typeof definition==="function"&&containsSuper.test(definition)){return(function(name,definition){return function(){var temp=this._super;this._super=superclass[name];var result=definition.apply(this,arguments);this._super=temp;return result;};})(name,definition);}
return definition;};})(window);